---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      # Deployment has PodAntiAffinity configured to ensure that
      # the scheduler does not co-locate replicas on a single node.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - grafana
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      containers:
        - name: grafana
          image: grafana/grafana
          imagePullPolicy: Always
          ports:
            - name: grafana
              containerPort: 3000
          resources:
            limits:
              memory: 2Gi
              cpu: 1000m
            requests:
              memory: 100Mi
              cpu: 15m
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-datasource
              mountPath: /etc/grafana/provisioning/datasources/prometheus.yml
              subPath: prometheus.yml
            - name: grafana-storage
              mountPath: /var/lib/grafana

      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-datasource
          configMap:
            name: grafana-datasource
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: ssd-claim-grafana
