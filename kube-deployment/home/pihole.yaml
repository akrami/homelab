apiVersion: v1
kind: Namespace
metadata:
  name: home
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata: 
    name: ssd-claim-pihole
    namespace: home
    annotations: 
        nfs.io/storage-path: "pihole"
spec: 
    storageClassName: nfs-client
    accessModes: 
        - ReadWriteMany
    resources: 
        requests: 
            storage: 2Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-secret
  namespace: home
type: Opaque
stringData: 
  pihole_web_password: xxxxxx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  labels:
    app: pihole
  namespace: home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      volumes:
      - name: pihole-storage
        persistentVolumeClaim:
          claimName: ssd-claim-pihole
      containers:
      - name: pihole
        image: pihole/pihole
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 53
          protocol: TCP
        - containerPort: 53
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/pihole
          name: pihole-storage
          subPath: etc
        - mountPath: /etc/dnsmasq.d
          name: pihole-storage
          subPath: dnsmasq
        env:
        - name: TZ
          value: Europe/Berlin
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-secret
              key: pihole_web_password
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-service
  namespace: home
spec:
  selector:
    app: pihole
  type: LoadBalancer
  ports:
    - name: tcp-53
      protocol: TCP
      port: 53
    - name: udp-53
      protocol: UDP
      port: 53
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-http-service
  namespace: home
spec:
  selector:
    app: pihole
  ports:
    - name: http
      protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: home
spec:
  ingressClassName: nginx
  rules:
    - host: hole.example.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pihole-http-service
                port:
                  number: 80
